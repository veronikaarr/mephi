# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from library_api.models.base_model_ import Model
from library_api.models.literature import Literature  # noqa: F401,E501
from library_api import util
from datetime import date


class OrderBook(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, status: int=None, fact_return_date: date=None, id_literature: Literature=None):  # noqa: E501
        """OrderBook - a model defined in Swagger

        :param status: The status of this OrderBook.  # noqa: E501
        :type status: int
        :param fact_return_date: The fact_return_date of this OrderBook.  # noqa: E501
        :type fact_return_date: date
        :param id_literature: The id_literature of this OrderBook.  # noqa: E501
        :type id_literature: Literature
        """
        self.swagger_types = {
            'status': int,
            'fact_return_date': date,
            'id_literature': Literature
        }

        self.attribute_map = {
            'status': 'status',
            'fact_return_date': 'fact_return_date',
            'id_literature': 'id_literature'
        }

        self._status = status
        self._fact_return_date = fact_return_date
        self._id_literature = id_literature

    @classmethod
    def from_dict(cls, dikt) -> 'OrderBook':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderBook of this OrderBook.  # noqa: E501
        :rtype: OrderBook
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> int:
        """Gets the status of this OrderBook.

        Status 0 means 'book on hand' 1 - 'book returned'  # noqa: E501

        :return: The status of this OrderBook.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this OrderBook.

        Status 0 means 'book on hand' 1 - 'book returned'  # noqa: E501

        :param status: The status of this OrderBook.
        :type status: int
        """
        if status == 1:
            self.fact_return_date = date.today()
        self._status = status

    @property
    def fact_return_date(self) -> date:
        """Gets the fact_return_date of this OrderBook.


        :return: The fact_return_date of this OrderBook.
        :rtype: date
        """
        return self._fact_return_date

    @fact_return_date.setter
    def fact_return_date(self, fact_return_date: date):
        """Sets the fact_return_date of this OrderBook.


        :param fact_return_date: The fact_return_date of this OrderBook.
        :type fact_return_date: date
        """

        self._fact_return_date = fact_return_date

    @property
    def id_literature(self) -> Literature:
        """Gets the id_literature of this OrderBook.


        :return: The id_literature of this OrderBook.
        :rtype: Literature
        """
        return self._id_literature

    @id_literature.setter
    def id_literature(self, id_literature: Literature):
        """Sets the id_literature of this OrderBook.


        :param id_literature: The id_literature of this OrderBook.
        :type id_literature: Literature
        """

        self._id_literature = id_literature
